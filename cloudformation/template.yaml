AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM Template to fetch data for TLC

Parameters:
  Color:
    Type: String
    Default: yellow
  URL:
    Type: String
    Default: https://www.nyc.gov/site/tlc/about/tlc-trip-record-data.page
  
  RedshiftDBName:
    Type: String
    Default: nyc_tlc_db
  RedshiftWorkgroupName:
    Type: String
    Default: nyc-tlc-workgroup
  RedshiftNamespaceName:
    Type: String
    Default: nyc-tlc-namespace
  RedshiftTableName:
    Type: String
    Default: yellow_tripdata

Globals:
  Function:
    Runtime: python3.11
    Architectures:
      - arm64
    LoggingConfig:
      LogFormat: JSON

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nyc-tlc-data-lake
      VersioningConfiguration:
        Status: Enabled

  RedshiftStack:
    Type: AWS::CloudFormation::Stack
    Properties: 
      TemplateURL: "./redshift.yaml"
      Parameters: 
        S3BucketName: !Ref S3Bucket
        RedshiftDBName: !Ref RedshiftDBName
        RedshiftWorkgroupName: !Ref RedshiftWorkgroupName
        RedshiftNamespaceName: !Ref RedshiftNamespaceName

  FetchDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-fetch_data"
      CodeUri: ../lambda/fetch_data
      Handler: function.lambda_handler
      Timeout: 30
      MemorySize: 256
      Environment:
        Variables:
          bucket_name: !Ref S3Bucket
          color: !Ref Color
          url: !Ref URL
          ssm_month_var: !Ref LastProcessedMonth
          ssm_year_var: !Ref LastProcessedYear
      Policies:
        - Statement:
          - Effect: 'Allow'
            Action:
              - s3:PutObject
              - ssm:PutParameter
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}/raw/*'
              - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${LastProcessedMonth}'
              - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${LastProcessedYear}'

  CleanDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-clean_data"
      CodeUri: ../lambda/clean_data
      Handler: function.lambda_handler
      Timeout: 90
      MemorySize: 512
      Environment:
        Variables:
          bucket_name: !Ref S3Bucket
      Policies:
        - Statement:
          - Effect: 'Allow'
            Action:
              - s3:ListBucket
              - s3:GetObject
              - s3:PutObject
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}'
              - !Sub 'arn:aws:s3:::${S3Bucket}/raw/*'
              - !Sub 'arn:aws:s3:::${S3Bucket}/cleaned/*'

  UploadDataFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-upload_data"
      CodeUri: ../lambda/upload_data
      Handler: function.lambda_handler
      Timeout: 60
      MemorySize: 256
      Environment:
        Variables:
          redshift_db: !Ref RedshiftDBName
          workgroup_name: !Ref RedshiftWorkgroupName
          iam_role_arn: !GetAtt RedshiftStack.Outputs.RedshiftIAMRoleArn
          secret_arn: !GetAtt RedshiftStack.Outputs.DBSecretArn
          table_name: !Ref RedshiftTableName
      Policies:
        - Statement:
          - Effect: 'Allow'
            Action:
              - s3:ListBucket
              - s3:GetObject
            Resource:
              - !Sub 'arn:aws:s3:::${S3Bucket}'
              - !Sub 'arn:aws:s3:::${S3Bucket}/cleaned/*'
          - Effect: 'Allow'
            Action:
              - iam:PassRole
              - secretsmanager:GetSecretValue
            Resource:
              - !GetAtt RedshiftStack.Outputs.RedshiftIAMRoleArn
              - !GetAtt RedshiftStack.Outputs.DBSecretArn
        - Statement:
          - Effect: 'Allow'
            Action:
              - redshift-data:ExecuteStatement
              - redshift-serverless:GetCredentials
            Resource:
              - !GetAtt RedshiftStack.Outputs.WorkgroupArn
              - !GetAtt RedshiftStack.Outputs.NamespaceArn
          - Effect: 'Allow'
            Action:
              - redshift-data:DescribeStatement
            Resource: '*'


  LastProcessedMonth:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: '/nyc-tlc-dataflow/LastProcessedMonth'
      Type: 'String'
      Value: '1'

  LastProcessedYear:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: '/nyc-tlc-dataflow/LastProcessedYear'
      Type: 'String'
      Value: '2024'

