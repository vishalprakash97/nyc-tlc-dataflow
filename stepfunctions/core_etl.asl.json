{
    "Comment": "Handles the processing of data for a specific month and year.",
    "StartAt": "Fetch Data",
    "States": {
      "Fetch Data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${FetchDataFunctionArn}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException"
            ],
            "IntervalSeconds": 5,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Clean Data",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "FailState"
          }
        ],
        "ResultSelector": {
          "bucket_name.$": "$.Payload.bucket_name",
          "object_key.$": "$.Payload.object_key"
        }
      },
      "Clean Data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${CleanDataFunctionArn}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException",
              "Lambda.Unkown"
            ],
            "IntervalSeconds": 5,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "Next": "Upload Data",
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "FailState"
          }
        ],
        "ResultSelector": {
          "bucket_name.$": "$.Payload.bucket_name",
          "object_path.$": "$.Payload.object_path"
        }
      },
      "Upload Data": {
        "Type": "Task",
        "Resource": "arn:aws:states:::lambda:invoke",
        "OutputPath": "$.Payload",
        "Parameters": {
          "Payload.$": "$",
          "FunctionName": "${UploadDataFunctionArn}"
        },
        "Retry": [
          {
            "ErrorEquals": [
              "Lambda.ServiceException",
              "Lambda.AWSLambdaException",
              "Lambda.SdkClientException",
              "Lambda.TooManyRequestsException",
              "Lambda.Unkown"
            ],
            "IntervalSeconds": 5,
            "MaxAttempts": 3,
            "BackoffRate": 2
          }
        ],
        "End": true,
        "Catch": [
          {
            "ErrorEquals": [
              "States.ALL"
            ],
            "Next": "FailState"
          }
        ]
      },
      "FailState": {
        "Type": "Fail",
        "Error": "JobFailed",
        "Cause": "The Lambda function encountered an error."
      }
    }
  }